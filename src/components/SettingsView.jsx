import React, { useState } from 'react'
import { motion } from 'framer-motion'
import { Settings, Volume2, Mic, Palette, Bell, Shield, Download, Trash2, RefreshCw } from 'lucide-react'
import { useVoices, pickVoice } from './useVoices.js'\n\nconst ACCENT_PERSONAS = [\n  { id: 'rp_plain', label: 'RP • Neutral', pitch: 1.0, rate: 1.0, description: 'Classic Received Pronunciation' },\n  { id: 'rp_formal', label: 'RP • Formal', pitch: 0.95, rate: 0.95, description: 'More formal, theatrical RP' },\n  { id: 'rp_modern', label: 'RP • Modern', pitch: 1.05, rate: 1.02, description: 'Contemporary RP variation' },\n  { id: 'estuary', label: 'Estuary • Modern London', pitch: 1.05, rate: 1.02, description: 'Modern London accent' },\n  { id: 'estuary_mild', label: 'Estuary • Mild', pitch: 1.02, rate: 1.0, description: 'Subtle Estuary features' },\n  { id: 'cockney_soft', label: 'Cockney • Soft', pitch: 1.05, rate: 1.05, description: 'Gentle Cockney accent' },\n  { id: 'cockney_strong', label: 'Cockney • Strong', pitch: 1.1, rate: 1.02, description: 'Traditional East London' },\n  { id: 'yorkshire', label: 'Yorkshire', pitch: 0.95, rate: 0.98, description: 'Northern English accent' },\n  { id: 'scottish_mild', label: 'Scottish • Mild', pitch: 1.0, rate: 0.95, description: 'Subtle Scottish features' }\n]\n\nconst THEMES = [\n  { id: 'dark', label: 'Dark Mode', primary: '#1CB0F6', background: '#131F24' },\n  { id: 'light', label: 'Light Mode', primary: '#1CB0F6', background: '#FFFFFF' },\n  { id: 'royal', label: 'Royal Blue', primary: '#4169E1', background: '#0A0E1A' },\n  { id: 'forest', label: 'Forest Green', primary: '#22C55E', background: '#0A1A0A' },\n  { id: 'sunset', label: 'Sunset Orange', primary: '#F97316', background: '#1A0F0A' }\n]\n\nexport default function SettingsView({ config, setConfig }) {\n  const [settings, setSettings] = useState({\n    notifications: true,\n    autoSave: true,\n    privacyMode: false,\n    hapticFeedback: true,\n    theme: 'dark',\n    audioQuality: 'high',\n    autoPlay: false,\n    recordingTimeout: 10,\n    showPhonetics: true,\n    difficultyLevel: 'intermediate'\n  })\n  \n  const [showAdvanced, setShowAdvanced] = useState(false)\n  const voices = useVoices()\n  const selectedVoice = pickVoice(voices, { \n    lang: 'en-GB', \n    gender: config.gender, \n    nameIncludes: config.voiceHint \n  })\n  \n  const updateSetting = (key, value) => {\n    setSettings(prev => ({ ...prev, [key]: value }))\n  }\n  \n  const updateConfig = (key, value) => {\n    setConfig(prev => ({ ...prev, [key]: value }))\n  }\n  \n  const testVoice = () => {\n    const utterance = new SpeechSynthesisUtterance(\n      \"Hello! This is how your British voice partner sounds with the current settings.\"\n    )\n    utterance.lang = 'en-GB'\n    utterance.rate = config.speed || 1.0\n    utterance.pitch = config.pitch || 1.0\n    if (selectedVoice) utterance.voice = selectedVoice\n    \n    window.speechSynthesis.speak(utterance)\n  }\n  \n  const resetToDefaults = () => {\n    setConfig({\n      accent: 'RP',\n      persona: 'rp_plain',\n      speed: 1.0,\n      pitch: 1.0,\n      gender: 'any',\n      voiceHint: ''\n    })\n    \n    setSettings({\n      notifications: true,\n      autoSave: true,\n      privacyMode: false,\n      hapticFeedback: true,\n      theme: 'dark',\n      audioQuality: 'high',\n      autoPlay: false,\n      recordingTimeout: 10,\n      showPhonetics: true,\n      difficultyLevel: 'intermediate'\n    })\n  }\n  \n  const exportSettings = () => {\n    const exportData = {\n      config,\n      settings,\n      exportDate: new Date().toISOString()\n    }\n    \n    const dataStr = JSON.stringify(exportData, null, 2)\n    const dataBlob = new Blob([dataStr], { type: 'application/json' })\n    \n    const link = document.createElement('a')\n    link.href = URL.createObjectURL(dataBlob)\n    link.download = 'british-voice-partner-settings.json'\n    link.click()\n  }\n  \n  const clearAllData = () => {\n    if (confirm('Are you sure you want to clear all data? This cannot be undone.')) {\n      localStorage.clear()\n      alert('All data has been cleared. The app will reload.')\n      window.location.reload()\n    }\n  }\n\n  return (\n    <div className=\"grid\">\n      <motion.div \n        className=\"duolingo-card\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n      >\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '24px' }}>\n          <div>\n            <h1 style={{ margin: 0, fontSize: '28px', fontWeight: '700' }}>Settings</h1>\n            <p style={{ margin: '4px 0 0 0', color: '#B7C4CF' }}>Customize your British Voice Partner experience</p>\n          </div>\n          <div style={{ display: 'flex', gap: '8px' }}>\n            <button \n              className=\"duo-button\"\n              onClick={() => setShowAdvanced(!showAdvanced)}\n              style={{ padding: '8px 12px', fontSize: '14px' }}\n            >\n              {showAdvanced ? 'Hide Advanced' : 'Show Advanced'}\n            </button>\n            <button \n              className=\"duo-button\"\n              onClick={resetToDefaults}\n              style={{ padding: '8px 12px', fontSize: '14px' }}\n            >\n              <RefreshCw size={14} />\n            </button>\n          </div>\n        </div>\n      </motion.div>\n      \n      <div className=\"grid two-col\">\n        <motion.div \n          className=\"duolingo-card\"\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ duration: 0.6, delay: 0.2 }}\n        >\n          <div className=\"section-title\">\n            <Volume2 size={20} color=\"#1CB0F6\" />\n            Voice & Accent Settings\n          </div>\n          \n          <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n            <div>\n              <label style={{ display: 'block', marginBottom: '8px', fontWeight: '600', color: '#B7C4CF' }}>\n                Accent Type\n              </label>\n              <select\n                className=\"input-field\"\n                value={config.accent}\n                onChange={(e) => updateConfig('accent', e.target.value)}\n              >\n                <option value=\"RP\">RP (Received Pronunciation)</option>\n                <option value=\"Estuary\">Estuary (Modern London)</option>\n                <option value=\"Cockney\">Cockney (East London)</option>\n                <option value=\"Yorkshire\">Yorkshire</option>\n                <option value=\"Scottish\">Scottish</option>\n              </select>\n            </div>\n            \n            <div>\n              <label style={{ display: 'block', marginBottom: '8px', fontWeight: '600', color: '#B7C4CF' }}>\n                Voice Persona\n              </label>\n              <select\n                className=\"input-field\"\n                value={config.persona}\n                onChange={(e) => updateConfig('persona', e.target.value)}\n              >\n                {ACCENT_PERSONAS.map(persona => (\n                  <option key={persona.id} value={persona.id}>\n                    {persona.label}\n                  </option>\n                ))}\n              </select>\n              <div style={{ fontSize: '12px', color: '#8B9BA8', marginTop: '4px' }}>\n                {ACCENT_PERSONAS.find(p => p.id === config.persona)?.description}\n              </div>\n            </div>\n            \n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '16px' }}>\n              <div>\n                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '600', color: '#B7C4CF' }}>\n                  Speed: {config.speed?.toFixed(1) || '1.0'}x\n                </label>\n                <input\n                  type=\"range\"\n                  min=\"0.5\"\n                  max=\"1.5\"\n                  step=\"0.1\"\n                  value={config.speed || 1.0}\n                  onChange={(e) => updateConfig('speed', parseFloat(e.target.value))}\n                  style={{ width: '100%' }}\n                />\n              </div>\n              <div>\n                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '600', color: '#B7C4CF' }}>\n                  Pitch: {config.pitch?.toFixed(1) || '1.0'}\n                </label>\n                <input\n                  type=\"range\"\n                  min=\"0.7\"\n                  max=\"1.3\"\n                  step=\"0.1\"\n                  value={config.pitch || 1.0}\n                  onChange={(e) => updateConfig('pitch', parseFloat(e.target.value))}\n                  style={{ width: '100%' }}\n                />\n              </div>\n            </div>\n            \n            <div>\n              <label style={{ display: 'block', marginBottom: '8px', fontWeight: '600', color: '#B7C4CF' }}>\n                Preferred Gender\n              </label>\n              <select\n                className=\"input-field\"\n                value={config.gender}\n                onChange={(e) => updateConfig('gender', e.target.value)}\n              >\n                <option value=\"any\">Any</option>\n                <option value=\"female\">Female</option>\n                <option value=\"male\">Male</option>\n              </select>\n            </div>\n            \n            <div>\n              <label style={{ display: 'block', marginBottom: '8px', fontWeight: '600', color: '#B7C4CF' }}>\n                Voice Name Hint\n              </label>\n              <input\n                className=\"input-field\"\n                type=\"text\"\n                placeholder=\"e.g., Serena, Daniel, Google UK\"\n                value={config.voiceHint}\n                onChange={(e) => updateConfig('voiceHint', e.target.value)}\n              />\n              <div style={{ fontSize: '12px', color: '#8B9BA8', marginTop: '4px' }}>\n                Current voice: {selectedVoice?.name || 'Loading...'}\n              </div>\n            </div>\n            \n            <button className=\"duo-button\" onClick={testVoice}>\n              <Volume2 size={16} />\n              <span style={{ marginLeft: '8px' }}>Test Voice</span>\n            </button>\n          </div>\n        </motion.div>\n        \n        <motion.div \n          className=\"duolingo-card\"\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ duration: 0.6, delay: 0.4 }}\n        >\n          <div className=\"section-title\">\n            <Settings size={20} color=\"#CE82FF\" />\n            App Preferences\n          </div>\n          \n          <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n              <div>\n                <div style={{ fontWeight: '600', color: '#FFFFFF' }}>Notifications</div>\n                <div style={{ fontSize: '12px', color: '#B7C4CF' }}>Get reminders and updates</div>\n              </div>\n              <input\n                type=\"checkbox\"\n                checked={settings.notifications}\n                onChange={(e) => updateSetting('notifications', e.target.checked)}\n                style={{ width: '20px', height: '20px' }}\n              />\n            </div>\n            \n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n              <div>\n                <div style={{ fontWeight: '600', color: '#FFFFFF' }}>Auto-save Progress</div>\n                <div style={{ fontSize: '12px', color: '#B7C4CF' }}>Automatically save your practice sessions</div>\n              </div>\n              <input\n                type=\"checkbox\"\n                checked={settings.autoSave}\n                onChange={(e) => updateSetting('autoSave', e.target.checked)}\n                style={{ width: '20px', height: '20px' }}\n              />\n            </div>\n            \n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n              <div>\n                <div style={{ fontWeight: '600', color: '#FFFFFF' }}>Show Phonetics</div>\n                <div style={{ fontSize: '12px', color: '#B7C4CF' }}>Display phonetic transcriptions</div>\n              </div>\n              <input\n                type=\"checkbox\"\n                checked={settings.showPhonetics}\n                onChange={(e) => updateSetting('showPhonetics', e.target.checked)}\n                style={{ width: '20px', height: '20px' }}\n              />\n            </div>\n            \n            <div>\n              <label style={{ display: 'block', marginBottom: '8px', fontWeight: '600', color: '#B7C4CF' }}>\n                Audio Quality\n              </label>\n              <select\n                className=\"input-field\"\n                value={settings.audioQuality}\n                onChange={(e) => updateSetting('audioQuality', e.target.value)}\n              >\n                <option value=\"low\">Low (Faster)</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"high\">High (Better Quality)</option>\n              </select>\n            </div>\n            \n            <div>\n              <label style={{ display: 'block', marginBottom: '8px', fontWeight: '600', color: '#B7C4CF' }}>\n                Recording Timeout (seconds)\n              </label>\n              <input\n                type=\"range\"\n                min=\"5\"\n                max=\"30\"\n                step=\"5\"\n                value={settings.recordingTimeout}\n                onChange={(e) => updateSetting('recordingTimeout', parseInt(e.target.value))}\n                style={{ width: '100%' }}\n              />\n              <div style={{ fontSize: '12px', color: '#8B9BA8', textAlign: 'center' }}>\n                {settings.recordingTimeout} seconds\n              </div>\n            </div>\n            \n            <div>\n              <label style={{ display: 'block', marginBottom: '8px', fontWeight: '600', color: '#B7C4CF' }}>\n                Default Difficulty Level\n              </label>\n              <select\n                className=\"input-field\"\n                value={settings.difficultyLevel}\n                onChange={(e) => updateSetting('difficultyLevel', e.target.value)}\n              >\n                <option value=\"beginner\">Beginner</option>\n                <option value=\"intermediate\">Intermediate</option>\n                <option value=\"advanced\">Advanced</option>\n              </select>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n      \n      {showAdvanced && (\n        <motion.div \n          className=\"duolingo-card\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n        >\n          <div className=\"section-title\">\n            <Shield size={20} color=\"#FF4B4B\" />\n            Advanced & Data Management\n          </div>\n          \n          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '20px' }}>\n            <div style={{ \n              padding: '20px', \n              background: 'rgba(255, 255, 255, 0.05)', \n              borderRadius: '12px',\n              border: '1px solid rgba(255, 255, 255, 0.1)'\n            }}>\n              <div style={{ \n                display: 'flex', \n                alignItems: 'center', \n                gap: '8px', \n                marginBottom: '12px',\n                color: '#1CB0F6',\n                fontWeight: '600'\n              }}>\n                <Download size={16} />\n                Export Data\n              </div>\n              <div style={{ fontSize: '14px', color: '#B7C4CF', marginBottom: '16px' }}>\n                Download your settings and progress data as a backup file.\n              </div>\n              <button className=\"duo-button\" onClick={exportSettings}>\n                Export Settings\n              </button>\n            </div>\n            \n            <div style={{ \n              padding: '20px', \n              background: 'rgba(255, 75, 75, 0.1)', \n              borderRadius: '12px',\n              border: '1px solid #FF4B4B'\n            }}>\n              <div style={{ \n                display: 'flex', \n                alignItems: 'center', \n                gap: '8px', \n                marginBottom: '12px',\n                color: '#FF4B4B',\n                fontWeight: '600'\n              }}>\n                <Trash2 size={16} />\n                Clear All Data\n              </div>\n              <div style={{ fontSize: '14px', color: '#B7C4CF', marginBottom: '16px' }}>\n                Reset the app to its initial state. This will delete all progress and settings.\n              </div>\n              <button \n                className=\"duo-button red\"\n                onClick={clearAllData}\n              >\n                Clear Data\n              </button>\n            </div>\n            \n            <div style={{ \n              padding: '20px', \n              background: 'rgba(255, 255, 255, 0.05)', \n              borderRadius: '12px',\n              border: '1px solid rgba(255, 255, 255, 0.1)'\n            }}>\n              <div style={{ \n                display: 'flex', \n                alignItems: 'center', \n                gap: '8px', \n                marginBottom: '12px',\n                color: '#CE82FF',\n                fontWeight: '600'\n              }}>\n                <Palette size={16} />\n                Theme Selection\n              </div>\n              <div style={{ fontSize: '14px', color: '#B7C4CF', marginBottom: '16px' }}>\n                Choose your preferred app theme and color scheme.\n              </div>\n              <select\n                className=\"input-field\"\n                value={settings.theme}\n                onChange={(e) => updateSetting('theme', e.target.value)}\n              >\n                {THEMES.map(theme => (\n                  <option key={theme.id} value={theme.id}>\n                    {theme.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n          \n          <div style={{ \n            marginTop: '20px',\n            padding: '16px',\n            background: 'rgba(139, 155, 168, 0.1)',\n            borderRadius: '8px',\n            border: '1px solid rgba(139, 155, 168, 0.2)'\n          }}>\n            <div style={{ fontSize: '12px', color: '#8B9BA8', textAlign: 'center' }}>\n              British Voice Partner v1.0.0 • Made with ❤️ for theatre practitioners\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </div>\n  )\n}