import React, { useState, useEffect } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { Users, UserPlus, MessageCircle, Trophy, Clock, Target, Wifi, WifiOff, Settings } from 'lucide-react'

const SAMPLE_CAST_MEMBERS = [\n  {\n    id: 1,\n    name: \"Emma Thompson\",\n    character: \"Juliet\",\n    avatar: \"👩\",\n    status: \"online\",\n    progress: 85,\n    streak: 12,\n    lastSeen: \"2 minutes ago\",\n    currentScene: \"Act II, Scene 2\",\n    strengths: [\"Pronunciation\", \"Emotion\"],\n    weaknesses: [\"Pace\"]\n  },\n  {\n    id: 2,\n    name: \"James Wilson\",\n    character: \"Romeo\", \n    avatar: \"👨\",\n    status: \"online\",\n    progress: 92,\n    streak: 15,\n    lastSeen: \"5 minutes ago\",\n    currentScene: \"Act II, Scene 2\",\n    strengths: [\"Rhythm\", \"Accent\"],\n    weaknesses: [\"Volume\"]\n  },\n  {\n    id: 3,\n    name: \"Sarah Mitchell\",\n    character: \"Nurse\",\n    avatar: \"👵\",\n    status: \"away\",\n    progress: 67,\n    streak: 8,\n    lastSeen: \"1 hour ago\",\n    currentScene: \"Act I, Scene 3\",\n    strengths: [\"Character Voice\"],\n    weaknesses: [\"Pronunciation\", \"Timing\"]\n  },\n  {\n    id: 4,\n    name: \"Michael Chen\",\n    character: \"Mercutio\",\n    avatar: \"🎭\",\n    status: \"offline\",\n    progress: 74,\n    streak: 5,\n    lastSeen: \"3 hours ago\",\n    currentScene: \"Act I, Scene 4\",\n    strengths: [\"Energy\", \"Pace\"],\n    weaknesses: [\"Accent Consistency\"]\n  }\n]\n\nconst SAMPLE_MESSAGES = [\n  {\n    id: 1,\n    sender: \"Emma Thompson\",\n    message: \"Just nailed the balcony scene! The 'wherefore art thou' line is finally clicking.\",\n    timestamp: \"10:30 AM\",\n    type: \"achievement\"\n  },\n  {\n    id: 2,\n    sender: \"James Wilson\", \n    message: \"Great job Emma! I'm working on matching your emotional intensity in that scene.\",\n    timestamp: \"10:35 AM\",\n    type: \"message\"\n  },\n  {\n    id: 3,\n    sender: \"System\",\n    message: \"Sarah Mitchell completed 'Act I, Scene 3' with 89% accuracy!\",\n    timestamp: \"9:45 AM\",\n    type: \"notification\"\n  },\n  {\n    id: 4,\n    sender: \"Michael Chen\",\n    message: \"Anyone want to practice the Queen Mab speech together? I could use some feedback on the pacing.\",\n    timestamp: \"9:20 AM\",\n    type: \"request\"\n  }\n]\n\nexport default function CastSync({ userData, setUserData }) {\n  const [castMembers, setCastMembers] = useState(SAMPLE_CAST_MEMBERS)\n  const [messages, setMessages] = useState(SAMPLE_MESSAGES)\n  const [newMessage, setNewMessage] = useState('')\n  const [selectedMember, setSelectedMember] = useState(null)\n  const [connectionStatus, setConnectionStatus] = useState('connected')\n  const [showInvite, setShowInvite] = useState(false)\n  const [inviteCode, setInviteCode] = useState('ROM-JUL-2024')\n  \n  // Simulate real-time updates\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // Randomly update member status\n      setCastMembers(prev => prev.map(member => ({\n        ...member,\n        progress: Math.min(100, member.progress + Math.random() * 0.5),\n        lastSeen: member.status === 'online' ? 'Just now' : member.lastSeen\n      })))\n    }, 30000)\n    \n    return () => clearInterval(interval)\n  }, [])\n  \n  const sendMessage = () => {\n    if (!newMessage.trim()) return\n    \n    const message = {\n      id: Date.now(),\n      sender: \"You\",\n      message: newMessage.trim(),\n      timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\n      type: \"message\"\n    }\n    \n    setMessages(prev => [message, ...prev])\n    setNewMessage('')\n  }\n  \n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'online': return '#58CC02'\n      case 'away': return '#FFC800'\n      case 'offline': return '#8B9BA8'\n      default: return '#1CB0F6'\n    }\n  }\n  \n  const getMessageTypeColor = (type) => {\n    switch (type) {\n      case 'achievement': return '#58CC02'\n      case 'request': return '#1CB0F6'\n      case 'notification': return '#CE82FF'\n      default: return '#FFFFFF'\n    }\n  }\n  \n  const copyInviteCode = () => {\n    navigator.clipboard.writeText(`Join our British Voice Partner cast! Use code: ${inviteCode}`)\n    alert('Invite code copied to clipboard!')\n  }\n\n  return (\n    <div className=\"grid\">\n      <motion.div \n        className=\"duolingo-card\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n      >\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '24px' }}>\n          <div>\n            <h1 style={{ margin: 0, fontSize: '28px', fontWeight: '700' }}>Cast Collaboration</h1>\n            <p style={{ margin: '4px 0 0 0', color: '#B7C4CF' }}>Connect and practice with your cast members</p>\n          </div>\n          <div style={{ display: 'flex', gap: '12px', alignItems: 'center' }}>\n            <div style={{ \n              display: 'flex', \n              alignItems: 'center', \n              gap: '8px', \n              color: getStatusColor(connectionStatus),\n              fontSize: '14px',\n              fontWeight: '600'\n            }}>\n              {connectionStatus === 'connected' ? <Wifi size={16} /> : <WifiOff size={16} />}\n              {connectionStatus === 'connected' ? 'Connected' : 'Offline'}\n            </div>\n            <button \n              className=\"duo-button green\"\n              onClick={() => setShowInvite(!showInvite)}\n            >\n              <UserPlus size={16} />\n              <span style={{ marginLeft: '8px' }}>Invite Cast</span>\n            </button>\n          </div>\n        </div>\n        \n        <AnimatePresence>\n          {showInvite && (\n            <motion.div\n              initial={{ opacity: 0, height: 0 }}\n              animate={{ opacity: 1, height: 'auto' }}\n              exit={{ opacity: 0, height: 0 }}\n              transition={{ duration: 0.3 }}\n              style={{ marginBottom: '24px' }}\n            >\n              <div style={{ \n                background: 'rgba(88, 204, 2, 0.1)', \n                border: '1px solid #58CC02', \n                borderRadius: '12px', \n                padding: '20px',\n                textAlign: 'center'\n              }}>\n                <div style={{ fontSize: '18px', fontWeight: '600', marginBottom: '8px', color: '#FFFFFF' }}>\n                  Invite New Cast Members\n                </div>\n                <div style={{ color: '#B7C4CF', marginBottom: '16px' }}>\n                  Share this code with your fellow actors\n                </div>\n                <div style={{\n                  background: '#0F1419',\n                  border: '1px solid rgba(255,255,255,0.2)',\n                  borderRadius: '8px',\n                  padding: '12px',\n                  fontSize: '24px',\n                  fontWeight: '700',\n                  color: '#58CC02',\n                  fontFamily: 'monospace',\n                  marginBottom: '16px',\n                  letterSpacing: '2px'\n                }}>\n                  {inviteCode}\n                </div>\n                <button className=\"duo-button\" onClick={copyInviteCode}>\n                  Copy Invite Code\n                </button>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </motion.div>\n      \n      <div className=\"grid two-col\">\n        <motion.div \n          className=\"duolingo-card\"\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ duration: 0.6, delay: 0.2 }}\n        >\n          <div className=\"section-title\">\n            <Users size={20} color=\"#1CB0F6\" />\n            Cast Members ({castMembers.filter(m => m.status === 'online').length}/{castMembers.length} online)\n          </div>\n          \n          <div style={{ display: 'flex', flexDirection: 'column', gap: '16px', maxHeight: '500px', overflowY: 'auto' }}>\n            {castMembers.map((member) => (\n              <motion.div\n                key={member.id}\n                whileHover={{ scale: 1.02 }}\n                whileTap={{ scale: 0.98 }}\n                style={{\n                  padding: '16px',\n                  background: selectedMember?.id === member.id ? 'rgba(28, 176, 246, 0.2)' : 'rgba(255, 255, 255, 0.05)',\n                  border: `1px solid ${selectedMember?.id === member.id ? '#1CB0F6' : 'rgba(255, 255, 255, 0.1)'}`,\n                  borderRadius: '12px',\n                  cursor: 'pointer',\n                  transition: 'all 0.2s ease'\n                }}\n                onClick={() => setSelectedMember(member)}\n              >\n                <div style={{ display: 'flex', alignItems: 'center', gap: '12px', marginBottom: '12px' }}>\n                  <div style={{ position: 'relative' }}>\n                    <div style={{ fontSize: '32px' }}>{member.avatar}</div>\n                    <div style={{\n                      position: 'absolute',\n                      bottom: '0',\n                      right: '0',\n                      width: '12px',\n                      height: '12px',\n                      borderRadius: '50%',\n                      background: getStatusColor(member.status),\n                      border: '2px solid #1A252B'\n                    }} />\n                  </div>\n                  <div style={{ flex: 1 }}>\n                    <div style={{ fontWeight: '600', fontSize: '16px', color: '#FFFFFF' }}>\n                      {member.name}\n                    </div>\n                    <div style={{ color: '#B7C4CF', fontSize: '14px' }}>\n                      Playing {member.character}\n                    </div>\n                    <div style={{ color: '#8B9BA8', fontSize: '12px' }}>\n                      {member.status === 'online' ? 'Online now' : `Last seen ${member.lastSeen}`}\n                    </div>\n                  </div>\n                  <div style={{ textAlign: 'right' }}>\n                    <div style={{ fontSize: '18px', fontWeight: '700', color: '#1CB0F6' }}>\n                      {Math.round(member.progress)}%\n                    </div>\n                    <div style={{ color: '#FFC800', fontSize: '12px' }}>\n                      🔥 {member.streak} days\n                    </div>\n                  </div>\n                </div>\n                \n                <div style={{ marginBottom: '8px' }}>\n                  <div style={{ fontSize: '12px', color: '#B7C4CF', marginBottom: '4px' }}>\n                    Currently practicing: {member.currentScene}\n                  </div>\n                  <div className=\"progress-bar\" style={{ height: '6px' }}>\n                    <div className=\"progress-fill\" style={{ width: `${member.progress}%` }} />\n                  </div>\n                </div>\n                \n                <div style={{ display: 'flex', gap: '8px', flexWrap: 'wrap' }}>\n                  <div style={{ fontSize: '11px', color: '#58CC02' }}>Strengths:</div>\n                  {member.strengths.map((strength, index) => (\n                    <span\n                      key={index}\n                      style={{\n                        background: 'rgba(88, 204, 2, 0.2)',\n                        color: '#58CC02',\n                        padding: '2px 6px',\n                        borderRadius: '6px',\n                        fontSize: '10px',\n                        fontWeight: '600'\n                      }}\n                    >\n                      {strength}\n                    </span>\n                  ))}\n                </div>\n              </motion.div>\n            ))}\n          </div>\n        </motion.div>\n        \n        <motion.div \n          className=\"duolingo-card\"\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ duration: 0.6, delay: 0.4 }}\n        >\n          <div className=\"section-title\">\n            <MessageCircle size={20} color=\"#CE82FF\" />\n            Cast Chat\n          </div>\n          \n          <div style={{ \n            display: 'flex', \n            flexDirection: 'column-reverse',\n            gap: '12px', \n            maxHeight: '300px', \n            overflowY: 'auto',\n            marginBottom: '16px',\n            padding: '16px',\n            background: '#0F1419',\n            borderRadius: '12px',\n            border: '1px solid rgba(255,255,255,0.1)'\n          }}>\n            {messages.map((message) => (\n              <motion.div\n                key={message.id}\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3 }}\n                style={{\n                  padding: '12px',\n                  background: message.sender === 'You' ? 'rgba(28, 176, 246, 0.2)' : 'rgba(255, 255, 255, 0.05)',\n                  borderRadius: '8px',\n                  border: `1px solid ${message.sender === 'You' ? '#1CB0F6' : 'rgba(255, 255, 255, 0.1)'}`,\n                  alignSelf: message.sender === 'You' ? 'flex-end' : 'flex-start',\n                  maxWidth: '80%'\n                }}\n              >\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '4px' }}>\n                  <div style={{ \n                    fontWeight: '600', \n                    fontSize: '12px', \n                    color: getMessageTypeColor(message.type)\n                  }}>\n                    {message.sender}\n                  </div>\n                  <div style={{ fontSize: '11px', color: '#8B9BA8' }}>\n                    {message.timestamp}\n                  </div>\n                </div>\n                <div style={{ fontSize: '14px', color: '#FFFFFF', lineHeight: '1.4' }}>\n                  {message.message}\n                </div>\n                {message.type === 'achievement' && (\n                  <div style={{ \n                    marginTop: '8px',\n                    padding: '4px 8px',\n                    background: 'rgba(88, 204, 2, 0.3)',\n                    borderRadius: '12px',\n                    fontSize: '11px',\n                    color: '#58CC02',\n                    fontWeight: '600',\n                    display: 'inline-block'\n                  }}>\n                    🎉 Achievement!\n                  </div>\n                )}\n              </motion.div>\n            ))}\n          </div>\n          \n          <div style={{ display: 'flex', gap: '8px' }}>\n            <input\n              className=\"input-field\"\n              type=\"text\"\n              placeholder=\"Type a message...\"\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n              style={{ flex: 1, padding: '12px' }}\n            />\n            <button \n              className=\"duo-button\"\n              onClick={sendMessage}\n              disabled={!newMessage.trim()}\n            >\n              Send\n            </button>\n          </div>\n        </motion.div>\n      </div>\n      \n      {selectedMember && (\n        <motion.div \n          className=\"duolingo-card\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n        >\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '20px' }}>\n            <div className=\"section-title\">\n              <Target size={20} color=\"#FFC800\" />\n              {selectedMember.name}'s Progress\n            </div>\n            <button \n              className=\"duo-button\"\n              onClick={() => setSelectedMember(null)}\n              style={{ padding: '8px 12px', fontSize: '12px' }}\n            >\n              Close\n            </button>\n          </div>\n          \n          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '20px' }}>\n            <div style={{ textAlign: 'center' }}>\n              <div style={{ fontSize: '36px', fontWeight: '700', color: '#1CB0F6' }}>\n                {Math.round(selectedMember.progress)}%\n              </div>\n              <div style={{ color: '#B7C4CF', fontSize: '14px' }}>Overall Progress</div>\n            </div>\n            <div style={{ textAlign: 'center' }}>\n              <div style={{ fontSize: '36px', fontWeight: '700', color: '#FFC800' }}>\n                {selectedMember.streak}\n              </div>\n              <div style={{ color: '#B7C4CF', fontSize: '14px' }}>Day Streak</div>\n            </div>\n            <div style={{ textAlign: 'center' }}>\n              <div style={{ fontSize: '24px', fontWeight: '700', color: '#CE82FF' }}>\n                {selectedMember.character}\n              </div>\n              <div style={{ color: '#B7C4CF', fontSize: '14px' }}>Playing</div>\n            </div>\n          </div>\n          \n          <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px', marginTop: '24px' }}>\n            <div>\n              <div style={{ fontSize: '16px', fontWeight: '600', color: '#58CC02', marginBottom: '12px' }}>\n                💪 Strengths\n              </div>\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n                {selectedMember.strengths.map((strength, index) => (\n                  <div\n                    key={index}\n                    style={{\n                      background: 'rgba(88, 204, 2, 0.2)',\n                      color: '#58CC02',\n                      padding: '8px 12px',\n                      borderRadius: '8px',\n                      fontSize: '14px',\n                      fontWeight: '600'\n                    }}\n                  >\n                    ✓ {strength}\n                  </div>\n                ))}\n              </div>\n            </div>\n            \n            <div>\n              <div style={{ fontSize: '16px', fontWeight: '600', color: '#FF4B4B', marginBottom: '12px' }}>\n                🎯 Focus Areas\n              </div>\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n                {selectedMember.weaknesses.map((weakness, index) => (\n                  <div\n                    key={index}\n                    style={{\n                      background: 'rgba(255, 75, 75, 0.2)',\n                      color: '#FF4B4B',\n                      padding: '8px 12px',\n                      borderRadius: '8px',\n                      fontSize: '14px',\n                      fontWeight: '600'\n                    }}\n                  >\n                    ⚠️ {weakness}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </div>\n  )\n}